{"version":3,"sources":["components/Home.js","utils/api.js","components/Account.js","components/Postslist.js","components/FeaturedPost.js","components/App.js","index.js"],"names":["Home","className","Strangers_Things_api","apiCall","url","method","token","body","fetch","getFetchOptions","response","json","data","error","console","toUpperCase","headers","JSON","stringify","loginUser","username","password","isRegistering","user","registeration","login","getPosts","SubmitMessage","newPost","message","content","SubmitPost","title","description","price","willDeliver","post","deletePost","postId","log","getUserData","Account","User","setUser","setToken","UserData","setUserData","useState","setUsername","setPassword","setIsRegistering","handleLogout","handleSubmit","e","preventDefault","toggleRegistration","onSubmit","onClick","event","target","value","messages","map","idx","_id","index","fromUser","onChange","name","type","placeholder","required","Postslist","posts","setPosts","search","setSearch","setfeaturedPosts","featuredPosts","history","useHistory","setTitle","setDescription","setPrice","setWillDeliver","useEffect","fetched","handleSubmitPost","handleDeletePost","stopPropagation","window","confirm","filter","location","toLowerCase","includes","push","alert","handlePostClick","author","FeaturedPost","comments","setComments","setContent","handleSubmitComment","useParams","postsId","newArray","updatedpost","Object","assign","me","App","exact","to","activeClassName","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.456b5754.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => {\r\n\r\n    return <div className=\"landing\">\r\n        <h1>Welcome to Strangers Things</h1>\r\n        <p>Here at strangers things we list posts for sale for users to buy </p>\r\n        <p>we have the worlds largest selection of totally legal and legit offers from real people</p>\r\n\r\n    </div>\r\n}\r\nexport default Home;","const Strangers_Things_api = 'https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT'\r\n\r\n\r\nexport const apiCall = async (url, method = 'GET', token, body) => {\r\n  let data;\r\n  try {\r\n    const response = await fetch(\r\n      Strangers_Things_api + url,\r\n      getFetchOptions(method, body, token)\r\n    );\r\n    data = await response.json();\r\n    if (data.error) {\r\n      throw data.error;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n  return data;\r\n}\r\nconst getFetchOptions = (method, body, token) => {\r\n  if (token) {\r\n    return {\r\n      method: method.toUpperCase(),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n\r\n      },\r\n      body: JSON.stringify(body)\r\n    }\r\n  } else {\r\n    return {\r\n      method: method.toUpperCase(),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n\r\n\r\n\r\n      },\r\n      body: JSON.stringify(body)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const loginUser = async (username, password, isRegistering) => {\r\n  let data;\r\n  if (isRegistering) {\r\n    const registeration = await apiCall('/users/register', \"POST\", null, {\r\n      user: { username, password }\r\n    })\r\n    data = registeration;\r\n  } else {\r\n    const login = await apiCall('/users/login', 'POST', null, {\r\n      user: { username, password }\r\n    })\r\n    data = login;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport const getPosts = async (token) => {\r\n  const response = await apiCall('/posts', 'GET', token)\r\n  return response\r\n}\r\n\r\nexport const SubmitMessage = async (url, token, newPost) => {\r\n  const response = await fetch(Strangers_Things_api + url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      message: {\r\n        content: `${newPost}`\r\n      }\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const SubmitPost = async (token, title, description, price, willDeliver = false) => {\r\n  const data = await fetch(Strangers_Things_api + '/posts', {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      post: {\r\n        title: `${title}`,\r\n        description: `${description}`,\r\n        price: `$${price}`,\r\n        willDeliver: `${willDeliver}`\r\n      }\r\n    })\r\n  })\r\n\r\n  const response = await data.json()\r\n  return response\r\n}\r\n\r\nexport const deletePost = async (token, postId) => {\r\n  const data = await fetch(Strangers_Things_api + `/posts/${postId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  const response = await data.json()\r\n  console.log(response)\r\n  return response\r\n}\r\n\r\nexport const getUserData = async (token) => {\r\n  const data = await fetch(Strangers_Things_api + '/users/me', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n  })\r\n  const response = await data.json()\r\n  return response\r\n}","import React, { useState } from \"react\";\r\nimport { loginUser, getUserData} from \"../utils/api\";\r\n\r\n\r\nconst Account = ({\r\n    User, setUser, token, setToken,\r\n    UserData, setUserData }) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n\r\n\r\n    const handleLogout = () => {\r\n        setUser(false);\r\n        setToken('');\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isRegistering) {\r\n            const data = await loginUser(username, password, isRegistering)\r\n            setUser(username);\r\n            setToken(data.data.token);\r\n        } else {\r\n            const data = await loginUser(username, password, isRegistering)\r\n            setUser(username);\r\n            setToken(data.data.token);\r\n\r\n            const response = await getUserData(data.data.token);\r\n            setUserData(response.data)\r\n        }\r\n    }\r\n    const toggleRegistration = () => {\r\n        setIsRegistering(!isRegistering);\r\n    }\r\n\r\n    return <>\r\n\r\n        {\r\n            (token) ?\r\n                <>\r\n                    <h1>User profile</h1>\r\n                    <p>{User} is logged in </p>\r\n                    <button\r\n                        onSubmit={handleLogout}\r\n                        onClick={(event) => handleLogout(event.target.value)}\r\n                    >logout</button>\r\n                    <h2>Your Recents Sent messages</h2>\r\n                    {UserData &&\r\n                        UserData.messages.map((message, idx) => {\r\n                            return <ul key={`${message._id} ${idx}`} className=\"posts\">\r\n                                <h3>Post: {message.post.title}</h3>\r\n                                <div>message: {message.content}</div>\r\n                            </ul>\r\n                        })\r\n                    }\r\n                    <h2>My recived messages</h2>\r\n                    {User && token &&\r\n                        UserData.messages?.map((message, index) => {\r\n                            if (message.fromUser._id !== UserData._id) {\r\n                                return <div className=\"posts\" key={index}>\r\n                                    <div>Sender: {message.fromUser.username}</div>\r\n                                    <div>Message: {message.content}</div>\r\n                                </div>\r\n\r\n                            }\r\n                        })}\r\n                </> :\r\n                <>\r\n                    <h1>{isRegistering ? \"Registration\" : \"Login\"}</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            onChange={(event) => setUsername(event.target.value)}\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"username\"\r\n                        ></input>\r\n                        <input\r\n                            onChange={(event) => setPassword(event.target.value)}\r\n                            required\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                        ></input>\r\n                        <button\r\n                            type=\"submit\"\r\n                        >submit</button>\r\n                    </form>\r\n                    <button\r\n                        onSubmit={toggleRegistration}\r\n                        onClick={(event) => toggleRegistration(event.target.value)}\r\n                    >Register/login</button>\r\n                </>\r\n        }\r\n    </>\r\n}\r\nexport default Account;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getPosts, SubmitPost, deletePost } from \"../utils/api\";\r\n\r\n\r\nconst Postslist = ({\r\n    User,\r\n    token,\r\n    posts,\r\n    setPosts,\r\n    search,\r\n    setSearch,\r\n    featuredPosts,\r\n    setfeaturedPosts, UserData, setUserData }) => {\r\n\r\n    let history = useHistory();\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [willDeliver, setWillDeliver] = useState(false)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const fetched = await getPosts(token);\r\n            setPosts(fetched.data.posts)\r\n        })()\r\n\r\n    }, [])\r\n\r\n    const handlePostClick = (e, posts) => {\r\n        setfeaturedPosts(posts);\r\n        if (User && token) {\r\n            history.push(`/posts/${posts._id}`)\r\n        } else {\r\n            alert(\"you need to be logged in to view posts\")\r\n        }\r\n    }\r\n\r\n    const handleSubmitPost = async (e) => {\r\n        e.preventDefault();\r\n        const response = await SubmitPost(token, title, description, price, willDeliver)\r\n        setPosts([response.data.post, ...posts])\r\n    }\r\n\r\n    const handleDeletePost = async (e, posts) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Are you sure?')) {\r\n            const fetched = await deletePost(token, posts._id);\r\n            setPosts(fetched.data.posts, ...posts)\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <h1>Posts</h1>\r\n        <input onChange={(e) => {\r\n            setSearch(e.target.value);\r\n        }}\r\n            type=\"test\" name=\"search\" placeholder=\"search\"\r\n        />\r\n        {token && User &&\r\n            <form onSubmit={handleSubmitPost} className=\"newpostform\">\r\n                <h1>Submit a new post</h1>\r\n                <input\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    type=\"text\" name=\"title\"\r\n                    placeholder=\"Title\" value={title} />\r\n\r\n\r\n                <input\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    type=\"text\" name=\"description\"\r\n                    placeholder=\"Description\" value={description} />\r\n\r\n                <input\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    type=\"number\" name=\"price\"\r\n                    placeholder=\"$Price\" value={price} />\r\n                <div>\r\n                    <p>willDeliver?</p><input\r\n                        onChange={(e) => setWillDeliver(true)}\r\n                        type=\"radio\" name=\"willDeliver\"\r\n                        placeholder=\"willDeliver\" value={willDeliver} />\r\n\r\n\r\n                </div> <button type=\"submit\">Submit Post</button>\r\n            </form>\r\n        }\r\n\r\n        <ul>\r\n            {\r\n                posts.filter(posts => {\r\n                    return `${posts.location} ${posts.description}`\r\n                        .toLowerCase()\r\n                        .includes(search.toLowerCase())\r\n                })\r\n                    .map(posts => {\r\n                        return <div onClick={(e) => handlePostClick(e, posts)} key={posts._id} className=\"posts\">\r\n                            <h3>{posts.title}</h3>\r\n                            <div>{posts.description}</div>\r\n                            <div>{posts.price}</div>\r\n                            {token && (posts.author._id == UserData._id) &&\r\n                                <button onClick={(e) => handleDeletePost(e, posts)}>Delete</button>\r\n                            }\r\n                        </div>\r\n\r\n                    })\r\n            }\r\n        </ul>\r\n    </>\r\n\r\n\r\n}\r\nexport default Postslist;","import react, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubmitMessage, deletePost } from \"../utils/api\";\r\n\r\nconst FeaturedPost = ({ User,\r\n    token,\r\n    featuredPosts, setfeaturedPosts,\r\n    UserData, setUserData,\r\n    comments, setComments }) => {\r\n\r\n    const [newComments, setNewComments] = useState('')\r\n    const [content, setContent] = useState('');\r\n    const history = useHistory();\r\n    const { postsId } = useParams();\r\n\r\n    const handleClose = (e) => {\r\n        setfeaturedPosts(false);\r\n        history.push(\"/posts\")\r\n    }\r\n\r\n    const handleSubmitComment = async (e) => {\r\n        e.preventDefault();\r\n        const data = await SubmitMessage(`/posts/${featuredPosts._id}/messages`, token, content);\r\n        const newArray = [data.data.message, ...featuredPosts.messages]\r\n        const updatedpost = Object.assign(featuredPosts, { messages: newArray })\r\n        setfeaturedPosts(updatedpost)\r\n        setContent('')\r\n\r\n        console.log('update post', featuredPosts)\r\n    }\r\n    console.log(featuredPosts)\r\n\r\n    const handleDeletePost = async (e) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Are you sure?')) {\r\n            deletePost(token, featuredPosts._id);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <article className=\"FeaturedPost\">\r\n            <h1>{featuredPosts.title}</h1>\r\n            <p>{featuredPosts.description}</p>\r\n            <p>Posted by: {featuredPosts.author.username}</p>\r\n            <p>{featuredPosts.me}</p>\r\n            <section>\r\n                <h2>Comments</h2>\r\n                <ul>\r\n\r\n                    {featuredPosts.messages &&\r\n                        featuredPosts.messages.map(message => {\r\n                            return <li key={message._id}>\r\n                                <span>{message.content} posted by: {message.fromUser.username}</span>\r\n                            </li>\r\n\r\n                        })\r\n                    }\r\n                </ul>\r\n            </section>\r\n            {User && token && <form onSubmit={handleSubmitComment}>\r\n                <input\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    type=\"text\" name=\"comment\"\r\n                    placeholder=\"comment\" value={content} />\r\n                <button type=\"submit\">Submit Comment</button>\r\n            </form>\r\n            }\r\n            {User && token && (featuredPosts.author._id == UserData._id) &&\r\n                <button onClick={handleDeletePost}>Delete</button>\r\n            }\r\n            <button onClick={handleClose}>Close</button>\r\n        </article>\r\n    </>\r\n\r\n}\r\n\r\nexport default FeaturedPost;","import React, { useState } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Account from \"./Account\";\r\nimport Postslist from \"./Postslist\";\r\nimport FeaturedPost from \"./FeaturedPost\";\r\n\r\n// things to do \r\n// handle nav changes X\r\n// create posts section and search X\r\n// create api.js functions to handle fetch \r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [featuredPosts, setfeaturedPosts] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [User, setUser] = useState(false);\r\n    const [token, setToken] = useState('');\r\n    const [UserData, setUserData] = useState(false);\r\n\r\n\r\n    return <main>\r\n        <div className=\"navbar\">\r\n            <NavLink exact to='/' className='navlink' activeClassName=\"active\">\r\n                Home\r\n            </NavLink >\r\n            <NavLink exact to='/posts' className='navlink' activeClassName=\"active\">\r\n                Posts\r\n            </NavLink>\r\n            <NavLink exact to='/login' className='navlink' activeClassName=\"active\">\r\n                Account\r\n            </NavLink>\r\n        </div>\r\n\r\n        <Route exact path=\"/\">\r\n            <Home />\r\n        </Route>\r\n\r\n        <Route path=\"/posts\">\r\n            <Route path=\"/posts/:postsId\">\r\n                {User && token && featuredPosts &&\r\n                    <FeaturedPost\r\n                        User={User}\r\n                        token={token}\r\n                        featuredPosts={featuredPosts} setfeaturedPosts={setfeaturedPosts}\r\n                        UserData={UserData} setUserData={setUserData}\r\n                        comments={comments} setComments={setComments} />\r\n                }\r\n            </Route>\r\n            <Postslist\r\n                User={User}\r\n                token={token}\r\n                featuredPosts={featuredPosts} setfeaturedPosts={setfeaturedPosts}\r\n                posts={posts} setPosts={setPosts}\r\n                search={search} setSearch={setSearch}\r\n                UserData={UserData} setUserData={setUserData} />\r\n        </Route>\r\n\r\n        <Route path=\"/login\">\r\n            <Account\r\n                User={User} setUser={setUser}\r\n                token={token} setToken={setToken}\r\n                featuredPosts={featuredPosts} setfeaturedPosts={setfeaturedPosts}\r\n                UserData={UserData} setUserData={setUserData} />\r\n        </Route>\r\n    </main>\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { App } from \"./components\";\r\n\r\nimport styles from \"./styles.css\"\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('app')\r\n)"],"sourceRoot":""}